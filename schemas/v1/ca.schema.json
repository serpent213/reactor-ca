{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://serpent213.github.io/reactor-ca/schemas/v1/ca.schema.json",
  "title": "ReactorCA Certificate Authority Configuration",
  "description": "Configuration schema for ReactorCA root Certificate Authority",
  "type": "object",
  "required": [
    "ca"
  ],
  "additionalProperties": false,
  "properties": {
    "ca": {
      "type": "object",
      "description": "Root Certificate Authority configuration",
      "required": [
        "subject"
      ],
      "additionalProperties": false,
      "properties": {
        "subject": {
          "$ref": "#/$defs/SubjectConfig"
        },
        "validity": {
          "$ref": "#/$defs/Validity"
        },
        "key_algorithm": {
          "$ref": "#/$defs/KeyAlgorithm"
        },
        "hash_algorithm": {
          "$ref": "#/$defs/HashAlgorithm"
        },
        "extensions": {
          "$ref": "#/$defs/ExtensionsConfig"
        }
      }
    },
    "encryption": {
      "$ref": "#/$defs/EncryptionConfig"
    },
    "display": {
      "$ref": "#/$defs/DisplayConfig"
    }
  },
  "$defs": {
    "SubjectConfig": {
      "type": "object",
      "description": "Certificate subject distinguished name fields",
      "required": [],
      "additionalProperties": false,
      "properties": {
        "common_name": {
          "type": "string",
          "description": "Common Name (CN) - optional field for CA identification",
          "minLength": 1,
          "maxLength": 64
        },
        "organization": {
          "type": "string",
          "description": "Organization (O) - company or entity name",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9\\s\\-\\._,&()]*$"
        },
        "organizational_unit": {
          "type": "string",
          "description": "Organizational Unit (OU) - department or division",
          "minLength": 1,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9\\s\\-\\._,&()]*$"
        },
        "country": {
          "type": "string",
          "description": "Country (C) - 2-letter ISO country code",
          "pattern": "^[A-Z]{2}$"
        },
        "state": {
          "type": "string",
          "description": "State or Province (ST)",
          "minLength": 1,
          "maxLength": 128,
          "pattern": "^[a-zA-Z\\s\\-\\.]*$"
        },
        "locality": {
          "type": "string",
          "description": "Locality or City (L)",
          "minLength": 1,
          "maxLength": 128,
          "pattern": "^[a-zA-Z\\s\\-\\.]*$"
        },
        "email": {
          "type": "string",
          "description": "Email address - administrative contact",
          "format": "email"
        }
      }
    },
    "Validity": {
      "type": "object",
      "description": "Certificate validity period - specify any combination of years, months, days",
      "additionalProperties": false,
      "properties": {
        "years": {
          "type": "integer",
          "description": "Number of years the certificate is valid",
          "minimum": 0,
          "maximum": 50
        },
        "months": {
          "type": "integer",
          "description": "Number of months the certificate is valid",
          "minimum": 0,
          "maximum": 1200
        },
        "days": {
          "type": "integer",
          "description": "Number of days the certificate is valid",
          "minimum": 0,
          "maximum": 18250
        }
      },
      "anyOf": [
        {
          "required": [
            "years"
          ]
        },
        {
          "required": [
            "months"
          ]
        },
        {
          "required": [
            "days"
          ]
        }
      ]
    },
    "KeyAlgorithm": {
      "type": "string",
      "description": "Cryptographic key algorithm for certificate generation",
      "enum": [
        "RSA2048",
        "rsa2048",
        "RSA3072",
        "rsa3072",
        "RSA4096",
        "rsa4096",
        "ECP256",
        "ecp256",
        "ECP384",
        "ecp384",
        "ECP521",
        "ecp521",
        "ED25519",
        "ed25519"
      ],
      "default": "ECP384"
    },
    "HashAlgorithm": {
      "type": "string",
      "description": "Hash algorithm for certificate signature",
      "enum": [
        "SHA256",
        "sha256",
        "SHA384",
        "sha384",
        "SHA512",
        "sha512"
      ],
      "default": "SHA384"
    },
    "EncryptionConfig": {
      "type": "object",
      "description": "Configuration for private key encryption at rest",
      "required": [
        "provider"
      ],
      "additionalProperties": false,
      "properties": {
        "provider": {
          "type": "string",
          "description": "Encryption provider type",
          "enum": [
            "password",
            "ssh",
            "plugin"
          ],
          "default": "password"
        },
        "password": {
          "$ref": "#/$defs/PasswordConfig"
        },
        "ssh": {
          "$ref": "#/$defs/SSHConfig"
        },
        "plugin": {
          "$ref": "#/$defs/PluginConfig"
        }
      }
    },
    "PasswordConfig": {
      "type": "object",
      "description": "Password-based encryption configuration using scrypt + age",
      "additionalProperties": false,
      "properties": {
        "min_length": {
          "type": "integer",
          "description": "Minimum password length requirement",
          "minimum": 8,
          "default": 12
        },
        "file": {
          "type": "string",
          "description": "Path to file containing the password",
          "minLength": 1,
          "maxLength": 4096
        },
        "env_var": {
          "type": "string",
          "description": "Environment variable containing the password",
          "default": "REACTOR_CA_PASSWORD",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Z][A-Z0-9_]*$"
        }
      }
    },
    "SSHConfig": {
      "type": "object",
      "description": "SSH key-based encryption using existing SSH private keys",
      "required": [
        "identity_file"
      ],
      "additionalProperties": false,
      "properties": {
        "identity_file": {
          "type": "string",
          "description": "Path to SSH private key file (RSA, Ed25519, ECDSA)",
          "minLength": 1,
          "maxLength": 4096
        },
        "recipients": {
          "type": "array",
          "description": "SSH public keys (ssh-*) or age recipient strings (age1*)",
          "items": {
            "type": "string",
            "pattern": "^(age1|ssh-)"
          }
        }
      }
    },
    "PluginConfig": {
      "type": "object",
      "description": "Age plugin-based encryption (YubiKey, Secure Enclave, TPM, etc.)",
      "required": [
        "identity_file"
      ],
      "additionalProperties": false,
      "properties": {
        "identity_file": {
          "type": "string",
          "description": "Path to age identity file for the plugin",
          "minLength": 1,
          "maxLength": 4096
        },
        "recipients": {
          "type": "array",
          "description": "Plugin-specific recipient strings (age*)",
          "items": {
            "type": "string",
            "pattern": "^(age1|ssh-)"
          }
        }
      }
    },
    "DisplayConfig": {
      "type": "object",
      "description": "Certificate status display configuration",
      "additionalProperties": false,
      "properties": {
        "warnings": {
          "$ref": "#/$defs/WarningThresholds"
        }
      }
    },
    "WarningThresholds": {
      "type": "object",
      "description": "Day thresholds for certificate expiry warnings",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "integer",
          "description": "Days remaining to show red critical warning",
          "minimum": 1,
          "default": 7
        },
        "warning": {
          "type": "integer",
          "description": "Days remaining to show yellow warning",
          "minimum": 1,
          "default": 30
        }
      }
    },
    "ExtensionsConfig": {
      "type": "object",
      "description": "X.509 certificate extensions configuration",
      "additionalProperties": {
        "$ref": "#/$defs/UnknownExtension"
      },
      "properties": {
        "basic_constraints": {
          "$ref": "#/$defs/BasicConstraintsExtension"
        },
        "key_usage": {
          "$ref": "#/$defs/KeyUsageExtension"
        },
        "extended_key_usage": {
          "$ref": "#/$defs/ExtendedKeyUsageExtension"
        },
        "subject_key_identifier": {
          "$ref": "#/$defs/SubjectKeyIdentifierExtension"
        },
        "authority_key_identifier": {
          "$ref": "#/$defs/AuthorityKeyIdentifierExtension"
        },
        "name_constraints": {
          "$ref": "#/$defs/NameConstraintsExtension"
        },
        "crl_distribution_points": {
          "$ref": "#/$defs/CRLDistributionPointsExtension"
        }
      }
    },
    "BasicConstraintsExtension": {
      "type": "object",
      "description": "Basic Constraints extension (RFC 5280 Section 4.2.1.9)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": true
        },
        "ca": {
          "type": "boolean",
          "description": "Whether this certificate can act as a CA",
          "default": false
        },
        "path_length": {
          "type": "integer",
          "description": "Maximum number of non-self-issued intermediate certificates that may follow this certificate in a valid certification path",
          "minimum": 0,
          "maximum": 255
        },
        "path_length_zero": {
          "type": "boolean",
          "description": "Explicitly set path length to zero (can only be true when path_length is 0 or unset)",
          "default": false
        }
      }
    },
    "KeyUsageExtension": {
      "type": "object",
      "description": "Key Usage extension (RFC 5280 Section 4.2.1.3)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "digital_signature": {
          "type": "boolean",
          "description": "Digital signature key usage",
          "default": false
        },
        "content_commitment": {
          "type": "boolean",
          "description": "Content commitment (non-repudiation) key usage",
          "default": false
        },
        "key_encipherment": {
          "type": "boolean",
          "description": "Key encipherment key usage",
          "default": false
        },
        "data_encipherment": {
          "type": "boolean",
          "description": "Data encipherment key usage",
          "default": false
        },
        "key_agreement": {
          "type": "boolean",
          "description": "Key agreement key usage",
          "default": false
        },
        "key_cert_sign": {
          "type": "boolean",
          "description": "Certificate signing key usage",
          "default": false
        },
        "crl_sign": {
          "type": "boolean",
          "description": "CRL signing key usage",
          "default": false
        },
        "encipher_only": {
          "type": "boolean",
          "description": "Encipher only key usage (only valid if key_agreement is true)",
          "default": false
        },
        "decipher_only": {
          "type": "boolean",
          "description": "Decipher only key usage (only valid if key_agreement is true)",
          "default": false
        }
      }
    },
    "ExtendedKeyUsageExtension": {
      "type": "object",
      "description": "Extended Key Usage extension (RFC 5280 Section 4.2.1.12)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "server_auth": {
          "type": "boolean",
          "description": "TLS Web Server Authentication (1.3.6.1.5.5.7.3.1)",
          "default": false
        },
        "client_auth": {
          "type": "boolean",
          "description": "TLS Web Client Authentication (1.3.6.1.5.5.7.3.2)",
          "default": false
        },
        "code_signing": {
          "type": "boolean",
          "description": "Code Signing (1.3.6.1.5.5.7.3.3)",
          "default": false
        },
        "email_protection": {
          "type": "boolean",
          "description": "E-mail Protection (1.3.6.1.5.5.7.3.4)",
          "default": false
        },
        "time_stamping": {
          "type": "boolean",
          "description": "Time Stamping (1.3.6.1.5.5.7.3.8)",
          "default": false
        },
        "ocsp_signing": {
          "type": "boolean",
          "description": "OCSP Signing (1.3.6.1.5.5.7.3.9)",
          "default": false
        },
        "unknown_ext_key_usage": {
          "type": "array",
          "description": "Custom Extended Key Usage OIDs",
          "items": {
            "type": "string",
            "description": "Object Identifier (OID) in dotted decimal notation",
            "pattern": "^[0-9]+(\\.[0-9]+)*$"
          },
          "uniqueItems": true
        }
      }
    },
    "SubjectKeyIdentifierExtension": {
      "type": "object",
      "description": "Subject Key Identifier extension (RFC 5280 Section 4.2.1.2)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "method": {
          "type": "string",
          "description": "Method for generating the key identifier",
          "enum": [
            "hash",
            "manual"
          ],
          "default": "hash"
        },
        "manual_value": {
          "type": "string",
          "description": "Manual key identifier value (required when method is 'manual'). Supports hex: prefix for hexadecimal encoding",
          "pattern": "^(hex:[0-9A-Fa-f]+|[0-9A-Za-z+/]+=*)$"
        }
      }
    },
    "AuthorityKeyIdentifierExtension": {
      "type": "object",
      "description": "Authority Key Identifier extension (RFC 5280 Section 4.2.1.1)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "key_id": {
          "type": "string",
          "description": "Authority key identifier value. Supports hex: prefix for hexadecimal encoding",
          "pattern": "^(hex:[0-9A-Fa-f]+|[0-9A-Za-z+/]+=*)$"
        }
      }
    },
    "NameConstraintsExtension": {
      "type": "object",
      "description": "Name Constraints extension (RFC 5280 Section 4.2.1.10)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": true
        },
        "permitted_dns_domains": {
          "type": "array",
          "description": "DNS domains that are permitted (including subdomains)",
          "items": {
            "type": "string",
            "description": "DNS domain name (use leading dot for subdomains, e.g., '.example.com')"
          },
          "uniqueItems": true
        },
        "excluded_dns_domains": {
          "type": "array",
          "description": "DNS domains that are excluded (including subdomains)",
          "items": {
            "type": "string",
            "description": "DNS domain name (use leading dot for subdomains, e.g., '.example.com')"
          },
          "uniqueItems": true
        },
        "permitted_ip_ranges": {
          "type": "array",
          "description": "IP address ranges that are permitted (CIDR notation)",
          "items": {
            "type": "string",
            "description": "IP address range in CIDR notation (e.g., '192.168.0.0/16')",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$|^([0-9a-fA-F:]+)/[0-9]{1,3}$"
          },
          "uniqueItems": true
        },
        "excluded_ip_ranges": {
          "type": "array",
          "description": "IP address ranges that are excluded (CIDR notation)",
          "items": {
            "type": "string",
            "description": "IP address range in CIDR notation (e.g., '192.168.0.0/16')",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$|^([0-9a-fA-F:]+)/[0-9]{1,3}$"
          },
          "uniqueItems": true
        },
        "permitted_email_addresses": {
          "type": "array",
          "description": "Email addresses or domains that are permitted",
          "items": {
            "type": "string",
            "description": "Email address or domain (e.g., 'user@example.com' or 'example.com')"
          },
          "uniqueItems": true
        },
        "excluded_email_addresses": {
          "type": "array",
          "description": "Email addresses or domains that are excluded",
          "items": {
            "type": "string",
            "description": "Email address or domain (e.g., 'user@example.com' or 'example.com')"
          },
          "uniqueItems": true
        },
        "permitted_uri_domains": {
          "type": "array",
          "description": "URI domains that are permitted",
          "items": {
            "type": "string",
            "description": "URI domain name (e.g., 'example.com')"
          },
          "uniqueItems": true
        },
        "excluded_uri_domains": {
          "type": "array",
          "description": "URI domains that are excluded",
          "items": {
            "type": "string",
            "description": "URI domain name (e.g., 'example.com')"
          },
          "uniqueItems": true
        }
      }
    },
    "DistributionPoint": {
      "type": "object",
      "description": "A single CRL distribution point",
      "required": [
        "urls"
      ],
      "additionalProperties": false,
      "properties": {
        "urls": {
          "type": "array",
          "description": "Array of URLs for this distribution point",
          "minItems": 1,
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "reasons": {
          "type": "array",
          "description": "Array of CRL reasons (optional)",
          "items": {
            "type": "string",
            "enum": [
              "unspecified",
              "key_compromise",
              "ca_compromise",
              "affiliation_changed",
              "superseded",
              "cessation_of_operation",
              "certificate_hold",
              "privilege_withdrawn",
              "aa_compromise"
            ]
          }
        }
      }
    },
    "UnknownExtension": {
      "type": "object",
      "description": "Custom extension specified by OID",
      "required": [
        "oid"
      ],
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "oid": {
          "type": "string",
          "description": "Object Identifier (OID) in dotted decimal notation (minimum 2 arcs, maximum 128 arcs, each arc 0-4294967295)",
          "pattern": "^[0-2]\\.[0-9]+(\\.[0-9]+)*$",
          "minLength": 3,
          "maxLength": 512
        }
      },
      "oneOf": [
        {
          "description": "Extension with base64-encoded value",
          "required": [
            "base64"
          ],
          "properties": {
            "critical": {
              "type": "boolean",
              "description": "Whether this extension is critical",
              "default": false
            },
            "oid": {
              "type": "string",
              "description": "Object Identifier (OID) in dotted decimal notation",
              "pattern": "^[0-2]\\.[0-9]+(\\.[0-9]+)*$",
              "minLength": 3,
              "maxLength": 512
            },
            "base64": {
              "type": "string",
              "description": "Base64-encoded extension value",
              "pattern": "^[A-Za-z0-9+/]+=*$",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Extension with hexadecimal-encoded value",
          "required": [
            "hex"
          ],
          "properties": {
            "critical": {
              "type": "boolean",
              "description": "Whether this extension is critical",
              "default": false
            },
            "oid": {
              "type": "string",
              "description": "Object Identifier (OID) in dotted decimal notation",
              "pattern": "^[0-2]\\.[0-9]+(\\.[0-9]+)*$",
              "minLength": 3,
              "maxLength": 512
            },
            "hex": {
              "type": "string",
              "description": "Hexadecimal-encoded extension value (even number of hex digits)",
              "pattern": "^([0-9A-Fa-f]{2})+$",
              "minLength": 2
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Extension with ASN.1 structured value",
          "required": [
            "asn1"
          ],
          "properties": {
            "critical": {
              "type": "boolean",
              "description": "Whether this extension is critical",
              "default": false
            },
            "oid": {
              "type": "string",
              "description": "Object Identifier (OID) in dotted decimal notation",
              "pattern": "^[0-2]\\.[0-9]+(\\.[0-9]+)*$",
              "minLength": 3,
              "maxLength": 512
            },
            "asn1": {
              "$ref": "#/$defs/ASN1Value"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ASN1Value": {
      "type": "object",
      "description": "ASN.1 value with strict type validation - exactly one type must be specified",
      "oneOf": [
        {
          "description": "ASN.1 UTF8String value",
          "required": [
            "string"
          ],
          "properties": {
            "string": {
              "type": "string",
              "description": "UTF-8 string value for ASN.1 encoding",
              "minLength": 1,
              "maxLength": 65535
            }
          }
        },
        {
          "description": "ASN.1 INTEGER value",
          "required": [
            "int"
          ],
          "properties": {
            "int": {
              "type": "integer",
              "description": "Integer value for ASN.1 encoding"
            }
          }
        },
        {
          "description": "ASN.1 BOOLEAN value",
          "required": [
            "bool"
          ],
          "properties": {
            "bool": {
              "type": "boolean",
              "description": "Boolean value for ASN.1 encoding"
            }
          }
        },
        {
          "description": "ASN.1 OBJECT IDENTIFIER value",
          "required": [
            "oid"
          ],
          "properties": {
            "oid": {
              "type": "string",
              "description": "Object Identifier (OID) value for ASN.1 encoding",
              "pattern": "^[0-2]\\.[0-9]+(\\.[0-9]+)*$",
              "minLength": 3,
              "maxLength": 512
            }
          }
        }
      ]
    },
    "CRLDistributionPointsExtension": {
      "type": "object",
      "description": "CRL Distribution Points extension with structured configuration",
      "required": [
        "distribution_points"
      ],
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "distribution_points": {
          "type": "array",
          "description": "Array of CRL distribution points",
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/DistributionPoint"
          }
        }
      }
    }
  }
}

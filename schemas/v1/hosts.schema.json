{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://serpent213.github.io/reactor-ca/schemas/v1/hosts.schema.json",
  "title": "ReactorCA Host Certificate Configuration",
  "description": "Configuration schema for ReactorCA host certificates",
  "type": "object",
  "required": [
    "hosts"
  ],
  "properties": {
    "hosts": {
      "type": "object",
      "description": "Map of host certificate configurations by unique ID",
      "patternProperties": {
        "^[a-zA-Z0-9][a-zA-Z0-9_-]*$": {
          "$ref": "#/$defs/HostConfig"
        }
      },
      "additionalProperties": false
    }
  },
  "$defs": {
    "HostConfig": {
      "type": "object",
      "description": "Configuration for a single host certificate",
      "required": [],
      "additionalProperties": false,
      "properties": {
        "subject": {
          "$ref": "#/$defs/SubjectConfig"
        },
        "alternative_names": {
          "$ref": "#/$defs/SubjectAlternativeNames"
        },
        "validity": {
          "$ref": "#/$defs/Validity"
        },
        "key_algorithm": {
          "$ref": "#/$defs/KeyAlgorithm"
        },
        "hash_algorithm": {
          "$ref": "#/$defs/HashAlgorithm"
        },
        "export": {
          "$ref": "#/$defs/ExportConfig"
        },
        "deploy": {
          "$ref": "#/$defs/DeployConfig"
        },
        "encryption": {
          "$ref": "#/$defs/EncryptionConfig"
        },
        "extensions": {
          "$ref": "#/$defs/ExtensionsConfig"
        }
      }
    },
    "SubjectConfig": {
      "type": "object",
      "description": "Certificate subject distinguished name fields",
      "required": [],
      "additionalProperties": false,
      "properties": {
        "common_name": {
          "type": "string",
          "description": "Common Name (CN) - optional field for legacy compatibility. Must be included in SAN DNS names if specified"
        },
        "organization": {
          "type": "string",
          "description": "Organization (O) - inherits from CA if not specified"
        },
        "organization_unit": {
          "type": "string",
          "description": "Organizational Unit (OU) - inherits from CA if not specified"
        },
        "country": {
          "type": "string",
          "description": "Country (C) - 2-letter ISO country code",
          "pattern": "^[A-Z]{2}$"
        },
        "state": {
          "type": "string",
          "description": "State or Province (ST) - inherits from CA if not specified"
        },
        "locality": {
          "type": "string",
          "description": "Locality or City (L) - inherits from CA if not specified"
        },
        "email": {
          "type": "string",
          "description": "Email address - inherits from CA if not specified",
          "format": "email"
        }
      }
    },
    "SubjectAlternativeNames": {
      "type": "object",
      "description": "Subject Alternative Names (SANs) for the certificate",
      "additionalProperties": false,
      "properties": {
        "dns": {
          "type": "array",
          "description": "DNS names the certificate is valid for",
          "items": {
            "type": "string",
            "description": "Fully qualified domain name",
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*$"
          },
          "uniqueItems": true
        },
        "ip": {
          "type": "array",
          "description": "IP addresses the certificate is valid for",
          "items": {
            "type": "string",
            "description": "IPv4 or IPv6 address",
            "anyOf": [
              {
                "format": "ipv4"
              },
              {
                "format": "ipv6"
              }
            ]
          },
          "uniqueItems": true
        },
        "email": {
          "type": "array",
          "description": "Email addresses the certificate is valid for",
          "items": {
            "type": "string",
            "format": "email"
          },
          "uniqueItems": true
        },
        "uri": {
          "type": "array",
          "description": "URIs the certificate is valid for",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "uniqueItems": true
        }
      }
    },
    "Validity": {
      "type": "object",
      "description": "Certificate validity period - specify any combination of years, months, days",
      "additionalProperties": false,
      "properties": {
        "years": {
          "type": "integer",
          "description": "Number of years the certificate is valid",
          "minimum": 0,
          "maximum": 10
        },
        "months": {
          "type": "integer",
          "description": "Number of months the certificate is valid",
          "minimum": 0,
          "maximum": 120
        },
        "days": {
          "type": "integer",
          "description": "Number of days the certificate is valid",
          "minimum": 0,
          "maximum": 3650
        }
      },
      "anyOf": [
        {
          "required": [
            "years"
          ]
        },
        {
          "required": [
            "months"
          ]
        },
        {
          "required": [
            "days"
          ]
        }
      ]
    },
    "KeyAlgorithm": {
      "type": "string",
      "description": "Cryptographic key algorithm - defaults to CA's key_algorithm if not specified",
      "enum": [
        "RSA2048",
        "rsa2048",
        "RSA3072",
        "rsa3072",
        "RSA4096",
        "rsa4096",
        "ECP256",
        "ecp256",
        "ECP384",
        "ecp384",
        "ECP521",
        "ecp521",
        "ED25519",
        "ed25519"
      ]
    },
    "HashAlgorithm": {
      "type": "string",
      "description": "Hash algorithm for certificate signature - defaults to CA's hash_algorithm if not specified",
      "enum": [
        "SHA256",
        "sha256",
        "SHA384",
        "sha384",
        "SHA512",
        "sha512"
      ]
    },
    "ExportConfig": {
      "type": "object",
      "description": "Paths for exporting certificate files after issuance",
      "additionalProperties": false,
      "properties": {
        "cert": {
          "type": "string",
          "description": "Path to save the host certificate (PEM format)"
        },
        "chain": {
          "type": "string",
          "description": "Path to save the full certificate chain (host + CA certificates)"
        },
        "key_encrypted": {
          "type": "string",
          "description": "Path to save the age-encrypted private key"
        }
      }
    },
    "DeployConfig": {
      "type": "object",
      "description": "Deployment commands to run after certificate issuance",
      "required": [
        "command"
      ],
      "additionalProperties": false,
      "properties": {
        "command": {
          "type": "string",
          "description": "Shell command to execute (supports variables: ${cert}, ${chain}, ${private_key})",
          "minLength": 1
        }
      }
    },
    "EncryptionConfig": {
      "type": "object",
      "description": "Additional encryption configuration for this host",
      "additionalProperties": false,
      "properties": {
        "additional_recipients": {
          "type": "array",
          "description": "Additional age public keys for encrypting the private key (for agenix or multi-party access)",
          "items": {
            "type": "string",
            "description": "Age public key or SSH public key",
            "pattern": "^(age|ssh-)"
          },
          "uniqueItems": true
        }
      }
    },
    "ExtensionsConfig": {
      "type": "object",
      "description": "X.509 certificate extensions configuration",
      "additionalProperties": {
        "$ref": "#/$defs/UnknownExtension"
      },
      "properties": {
        "basic_constraints": {
          "$ref": "#/$defs/BasicConstraintsExtension"
        },
        "key_usage": {
          "$ref": "#/$defs/KeyUsageExtension"
        },
        "extended_key_usage": {
          "$ref": "#/$defs/ExtendedKeyUsageExtension"
        },
        "subject_key_identifier": {
          "$ref": "#/$defs/SubjectKeyIdentifierExtension"
        },
        "authority_key_identifier": {
          "$ref": "#/$defs/AuthorityKeyIdentifierExtension"
        },
        "name_constraints": {
          "$ref": "#/$defs/NameConstraintsExtension"
        }
      }
    },
    "BasicConstraintsExtension": {
      "type": "object",
      "description": "Basic Constraints extension (RFC 5280 Section 4.2.1.9)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": true
        },
        "ca": {
          "type": "boolean",
          "description": "Whether this certificate can act as a CA",
          "default": false
        },
        "path_length": {
          "type": "integer",
          "description": "Maximum number of non-self-issued intermediate certificates that may follow this certificate in a valid certification path",
          "minimum": 0,
          "maximum": 255
        },
        "path_length_zero": {
          "type": "boolean",
          "description": "Explicitly set path length to zero (can only be true when path_length is 0 or unset)",
          "default": false
        }
      }
    },
    "KeyUsageExtension": {
      "type": "object",
      "description": "Key Usage extension (RFC 5280 Section 4.2.1.3)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "digital_signature": {
          "type": "boolean",
          "description": "Digital signature key usage",
          "default": false
        },
        "content_commitment": {
          "type": "boolean",
          "description": "Content commitment (non-repudiation) key usage",
          "default": false
        },
        "key_encipherment": {
          "type": "boolean",
          "description": "Key encipherment key usage",
          "default": false
        },
        "data_encipherment": {
          "type": "boolean",
          "description": "Data encipherment key usage",
          "default": false
        },
        "key_agreement": {
          "type": "boolean",
          "description": "Key agreement key usage",
          "default": false
        },
        "key_cert_sign": {
          "type": "boolean",
          "description": "Certificate signing key usage",
          "default": false
        },
        "crl_sign": {
          "type": "boolean",
          "description": "CRL signing key usage",
          "default": false
        },
        "encipher_only": {
          "type": "boolean",
          "description": "Encipher only key usage (only valid if key_agreement is true)",
          "default": false
        },
        "decipher_only": {
          "type": "boolean",
          "description": "Decipher only key usage (only valid if key_agreement is true)",
          "default": false
        }
      }
    },
    "ExtendedKeyUsageExtension": {
      "type": "object",
      "description": "Extended Key Usage extension (RFC 5280 Section 4.2.1.12)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "server_auth": {
          "type": "boolean",
          "description": "TLS Web Server Authentication (1.3.6.1.5.5.7.3.1)",
          "default": false
        },
        "client_auth": {
          "type": "boolean",
          "description": "TLS Web Client Authentication (1.3.6.1.5.5.7.3.2)",
          "default": false
        },
        "code_signing": {
          "type": "boolean",
          "description": "Code Signing (1.3.6.1.5.5.7.3.3)",
          "default": false
        },
        "email_protection": {
          "type": "boolean",
          "description": "E-mail Protection (1.3.6.1.5.5.7.3.4)",
          "default": false
        },
        "time_stamping": {
          "type": "boolean",
          "description": "Time Stamping (1.3.6.1.5.5.7.3.8)",
          "default": false
        },
        "ocsp_signing": {
          "type": "boolean",
          "description": "OCSP Signing (1.3.6.1.5.5.7.3.9)",
          "default": false
        },
        "unknown_ext_key_usage": {
          "type": "array",
          "description": "Custom Extended Key Usage OIDs",
          "items": {
            "type": "string",
            "description": "Object Identifier (OID) in dotted decimal notation",
            "pattern": "^[0-9]+(\\.[0-9]+)*$"
          },
          "uniqueItems": true
        }
      }
    },
    "SubjectKeyIdentifierExtension": {
      "type": "object",
      "description": "Subject Key Identifier extension (RFC 5280 Section 4.2.1.2)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "method": {
          "type": "string",
          "description": "Method for generating the key identifier",
          "enum": [
            "hash",
            "manual"
          ],
          "default": "hash"
        },
        "manual_value": {
          "type": "string",
          "description": "Manual key identifier value (required when method is 'manual'). Supports hex: prefix for hexadecimal encoding",
          "pattern": "^(hex:[0-9A-Fa-f]+|[0-9A-Za-z+/]+=*)$"
        }
      }
    },
    "AuthorityKeyIdentifierExtension": {
      "type": "object",
      "description": "Authority Key Identifier extension (RFC 5280 Section 4.2.1.1)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "key_id": {
          "type": "string",
          "description": "Authority key identifier value. Supports hex: prefix for hexadecimal encoding",
          "pattern": "^(hex:[0-9A-Fa-f]+|[0-9A-Za-z+/]+=*)$"
        }
      }
    },
    "NameConstraintsExtension": {
      "type": "object",
      "description": "Name Constraints extension (RFC 5280 Section 4.2.1.10)",
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": true
        },
        "permitted_dns_domains": {
          "type": "array",
          "description": "DNS domains that are permitted (including subdomains)",
          "items": {
            "type": "string",
            "description": "DNS domain name (use leading dot for subdomains, e.g., '.example.com')"
          },
          "uniqueItems": true
        },
        "excluded_dns_domains": {
          "type": "array",
          "description": "DNS domains that are excluded (including subdomains)",
          "items": {
            "type": "string",
            "description": "DNS domain name (use leading dot for subdomains, e.g., '.example.com')"
          },
          "uniqueItems": true
        },
        "permitted_ip_ranges": {
          "type": "array",
          "description": "IP address ranges that are permitted (CIDR notation)",
          "items": {
            "type": "string",
            "description": "IP address range in CIDR notation (e.g., '192.168.0.0/16')",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$|^([0-9a-fA-F:]+)/[0-9]{1,3}$"
          },
          "uniqueItems": true
        },
        "excluded_ip_ranges": {
          "type": "array",
          "description": "IP address ranges that are excluded (CIDR notation)",
          "items": {
            "type": "string",
            "description": "IP address range in CIDR notation (e.g., '192.168.0.0/16')",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$|^([0-9a-fA-F:]+)/[0-9]{1,3}$"
          },
          "uniqueItems": true
        },
        "permitted_email_addresses": {
          "type": "array",
          "description": "Email addresses or domains that are permitted",
          "items": {
            "type": "string",
            "description": "Email address or domain (e.g., 'user@example.com' or 'example.com')"
          },
          "uniqueItems": true
        },
        "excluded_email_addresses": {
          "type": "array",
          "description": "Email addresses or domains that are excluded",
          "items": {
            "type": "string",
            "description": "Email address or domain (e.g., 'user@example.com' or 'example.com')"
          },
          "uniqueItems": true
        },
        "permitted_uri_domains": {
          "type": "array",
          "description": "URI domains that are permitted",
          "items": {
            "type": "string",
            "description": "URI domain name (e.g., 'example.com')"
          },
          "uniqueItems": true
        },
        "excluded_uri_domains": {
          "type": "array",
          "description": "URI domains that are excluded",
          "items": {
            "type": "string",
            "description": "URI domain name (e.g., 'example.com')"
          },
          "uniqueItems": true
        }
      }
    },
    "UnknownExtension": {
      "type": "object",
      "description": "Custom extension specified by OID",
      "required": [
        "oid",
        "value"
      ],
      "additionalProperties": false,
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Whether this extension is critical",
          "default": false
        },
        "oid": {
          "type": "string",
          "description": "Object Identifier (OID) in dotted decimal notation",
          "pattern": "^[0-9]+(\\.[0-9]+)*$"
        },
        "value": {
          "type": "string",
          "description": "Extension value. Supports multiple encodings: base64:, hex:, asn1:string:, asn1:int:, asn1:bool:, asn1:oid:"
        }
      }
    }
  }
}

# ReactorCA: Host Certificate Configuration
# This file defines the certificates you want to issue for your hosts/services.
# yaml-language-server: $schema=https://serpent213.github.io/reactor-ca/schemas/v1/hosts.schema.json

hosts:
  # Web server example - SAN-first approach (no CN required)
  web-server:
    # Subject Alternative Names are the primary method for hostname validation
    alternative_names:
      dns:
        - web.reactor.local
        - www.reactor.local
        - grafana.reactor.local
      ip:
        - 192.168.1.100
        - 10.10.0.1
        - 2001:db8::1
    validity:
      years: 1

  # FritzBox deployment example
  mushroom:
    subject:
      common_name: fritz.box
    alternative_names:
      dns:
        - fritz.box
      ip:
        - 192.168.178.1
    validity:
      years: 1
    key_algorithm: RSA2048
    hash_algorithm: SHA256
    deploy:
      command: |
        # using https://github.com/tisba/fritz-tls
        fritz-tls --manual --host https://admin@fritz.box --insecure --key=${private_key} --fullchain=${cert}

  # IoT device with custom subject fields
  iot-gateway:
    subject:
      organization_unit: IoT Division
    alternative_names:
      dns:
        - iot.reactor.local
        - mqtt.reactor.local
      ip:
        - 192.168.1.150
    validity:
      days: 365
    key_algorithm: ED25519
    hash_algorithm: SHA256
    export:
      cert: "/opt/iot/certs/gateway.crt"
      chain: "/opt/iot/certs/gateway-chain.crt"
    deploy:
      command: |
        chown iot:iot /opt/iot/certs/*
        systemctl restart mosquitto

  # Client certificate for user authentication (VPN, web auth, email signing)
  client-user:
    subject:
      organization_unit: Users
    alternative_names:
      email:
        - "john.doe@reactor.local"
    validity:
      years: 1
    key_algorithm: RSA3072
    hash_algorithm: SHA256
    # No export/deploy - stored in secure store only

  # Proxmox PVE deployment example (via SSH)
  moxbox:
    subject:
      common_name: moxbox
    alternative_names:
      dns:
        - moxbox
        - moxbox.fritz.box
    validity:
      months: 1
    key_algorithm: ECP384
    hash_algorithm: SHA384
    deploy:
      command: |
        scp ${cert} moxbox:new.pem
        scp ${private_key} moxbox:new.key
        ssh moxbox "pvenode cert set new.pem new.key --force --restart ; rm -f new.pem new.key"

  # NixOS homelab server with agenix secrets management
  # Additional recipients for runtime decryption on the target system
  nixos-homelab:
    subject:
      organization_unit: Infrastructure
    alternative_names:
      dns:
        - homelab.reactor.local
        - vault.reactor.local
        - git.reactor.local
        - ci.reactor.local
      ip:
        - 192.168.1.10
    validity:
      years: 1
    key_algorithm: ED25519
    hash_algorithm: SHA256
    # Include host's SSH host private key for agenix
    encryption:
      additional_recipients:
        - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEMJHSsJ1rwalBLpOt/JkxQubOwgp1xtZhvwqxkFCVTM test@reactor.local"
    export:
      cert: "../myserver/secrets/homelab/cert.pem"
      key_encrypted: "../myserver/secrets/homelab/key.age"
    deploy:
      command: |-
        # Rebuild NixOS configuration locally and deploy to target host
        cd ~/infrastructure/myserver
        nixos-rebuild switch --target-host root@homelab.reactor.local --flake .#homelab
